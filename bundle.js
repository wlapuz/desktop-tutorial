(()=>{"use strict";const e={"Damaged or Defective merchandise":"DFDM","Merchandise not received":"MNRC","Not as described":"NADR","Services not rendered":"SNRN",Misrepresentation:"MRPT","Cancelled recurring":"CNRX","Credit not processed":"CRNP","Deposit Adjustment":"DPAD","Deposit posting error":"DPST","Duplicate processing":"DPPR","Missing deposit":"MIDP",Overcharged:"OCHG","Paid by other means":"PBOM","Shorted funds":"SHFU","Account Take Over":"ATO","Third Party Inducement":"TPI","Counterfeit scenario":"Counterfeit","Counterfeit digital wallet":"Cnft Digital","Lost card":"Lost card","Stolen card":"Stolen card","Lost/Stolen digital wallet":"Lst/Stl Dgtl","Non Receipt of card":"Non Receipt","Unauthorized MOTO":"Unauth MOTO"},t={accountNumber:/Reference Number:\s*(\d+)/,scenario:new RegExp(`Show Additional Information.*?(${Object.keys(e).join("|")})`,"i"),status:/Status(?:\s+Code)?:\s*((?:Provisional Credit Issued - Recovery Pending|Pending|Closed|Waiting Approval of Financial Transactions|Waiting for Approval of Denial)(?:\s+\(\d+\))?)/i,claimAmount:/Claim Amount:\s*(\$[\d,]+\.\d{2})/,customerSince:/Customer Since:\s*(\d{2}\/\d{2}\/\d{4})/,dateOfBirth:/Birth Date:\s*(\d{2}\/\d{2}\/\d{4})/,openDate:/Open Date:?\s*(\d{2}\/\d{2}\/\d{4})/i,ytdAvgBal:/Average Balance YTD[:\s]*\$?([\d,]+\.?\d*)/i,nsf:/OD\/NSF Occurrences Past 12 Months[:\s]*(\d+)/i,transactionDate:/Transactions:[\s\S]*?Date[\s\S]*?(\d{2}\/\d{2}\/\d{4})/};class n{constructor(){this.analysisQuestions={DFDM:[{question:"Defect description?",notRequired:!1},{question:"Item purchased?",notRequired:!1},{question:"Estimated delivery date?",notRequired:!1},{question:"Return details?",notRequired:!1},{question:">16 days since return?",notRequired:!1}],MNRC:[{question:"Item purchased?",notRequired:!1},{question:"Estimated delivery date?",notRequired:!1},{question:"Received late & attempted return?",notRequired:!1},{question:"Cancellation date?",notRequired:!1},{question:"Cancellation reason?",notRequired:!1}],NADR:[{question:"Item & reason for NADR?",notRequired:!1},{question:"Expected service/delivery date?",notRequired:!1},{question:"Attempted resolution with merchant?",notRequired:!1},{question:"Cancellation/Return date?",notRequired:!1},{question:">16 days since return?",notRequired:!1}],SNRN:[{question:"Service purchased?",notRequired:!1},{question:"Expected service date?",notRequired:!1},{question:"Attempted resolution with merchant?",notRequired:!1},{question:"Cancellation date?",notRequired:!1},{question:"Cancellation reason?",notRequired:!1}],MRPT:[{question:"Purchase details?",notRequired:!1},{question:"Date merchant contacted?",notRequired:!1},{question:"Misrepresentation details?",notRequired:!1},{question:"Date received?",notRequired:!1},{question:"Date canceled/returned?",notRequired:!1},{question:"Agreed to future transactions?",notRequired:!1},{question:"7-day billing notification received?",notRequired:!1}],CNRX:[{question:"Cancellation date?",notRequired:!1},{question:"Cancellation reason?",notRequired:!1},{question:"Merchant contact details?",notRequired:!1}],CRNP:[{question:"Cancellation date?",notRequired:!1},{question:"Purchase description?",notRequired:!1},{question:"Expected/received date?",notRequired:!1},{question:"Return date?",notRequired:!1},{question:"Invoice/tracking number?",notRequired:!1},{question:"Attempted resolution with merchant?",notRequired:!1},{question:">16 days since return/cancellation?",notRequired:!1}],DPAD:[{question:" ",notRequired:!1}],DPST:[{question:"Legal line vs deposit amount mismatch?",notRequired:!1},{question:"EIV maker item match?",notRequired:!1},{question:"Deposit Review error confirmed?",notRequired:!1},{question:"TI error found?",notRequired:!1}],DPPR:[{question:"Ch can provide valid transation?",notRequired:!1},{question:"VROL supports duplicate processing?",notRequired:!1}],MIDP:[{question:"Deposit confirmed in Chase systems?",notRequired:!1},{question:"CMM check?",notRequired:!1},{question:"Valid deposit receipt provided?",notRequired:!1},{question:"TI error/sequence numbers?",notRequired:!1},{question:"Chip enabled deposit?",notRequired:!1},{question:"No irregular activity within same timeframe?",notRequired:!1}],OCHG:[{question:"Overcharge amount?",notRequired:!1},{question:"Transaction receipt w/ overcharge info?",notRequired:!1}],PBOM:[{question:"Chase-verified other payment?",notRequired:!1},{question:"Non-Chase payment proof in 10 days?",notRequired:!1},{question:"$500+ claim: signed statement in 10 days?",notRequired:!1}],SHFU:[{question:"TI error message?",notRequired:!1},{question:"Machine imbalance/funds not received?",notRequired:!1}],ATO:[{questionGreen:"Customer disputing all transactions performed on card that wasn't received (Excludes 522 or MOTO 2 transactions)",questionRed:"Customer not disputing all transactions performed on card that wasn't received (Excludes 522 or MOTO 2 transactions)",notRequired:!1},{questionGreen:"Invalid PIN attempts (i.e. N/A if PIN mailer sent)",questionRed:"No invalid PIN attempts (i.e. N/A if PIN mailer sent)",notRequired:!1},{questionGreen:"Out of pattern transactions: No history of valid transactions at same merchant location / terminal as disputed transactions or disputed transactions not similar in frequency and dollar amounts of customers previous valid transactions at same merchant location / terminal",questionRed:"Two or more undisputed transactions at same merchant location / terminal as disputed transactions for similar frequencies and dollar amounts",notRequired:!1},{questionGreen:"When disputed transaction recurring (i.e. code 522 or MOTO 2), related previous transactions also disputed",questionRed:"Transaction recurring (i.e. code 522 or MOTO 2) and previous transactions not being disputed",notRequired:!1},{questionGreen:"Recent changes to customer information (i.e. email, phone, address, etc.)",questionRed:"No recent changes to customer information (i.e. email, phone, address, etc.)",notRequired:!1},{questionGreen:"Third party fraud indicators present.",questionRed:null,notRequired:!1},{questionGreen:null,questionRed:"FPF indicators present",notRequired:!1},{questionGreen:"Transactions attempted after card closure",questionRed:null,notRequired:!1},{questionGreen:"Card mailed to alternative address",questionRed:null,notRequired:!1}],TPI:[{questionGreen:"Customer tricked into giving account info/access (e.g., ATM, debit card) \nSomeone else used the info to make transactions \nCustomer didn't approve transactions \nCustomer didn't receive benefit",questionRed:"Customer benefited from the transactions \nCustomer made the transactions themselves",notRequired:!1}],Counterfeit:[{questionGreen:"Out of pattern transactions: No history of valid transactions at the same merchant location / terminal of disputed transactions OR disputed transactions not similar in frequency and dollar amounts of customers' previous valid transactions at the same merchant location / terminal",questionRed:"Two or more undisputed transactions at the same merchant location / terminal as disputed transactions for similar frequencies and dollar amounts",notRequired:!1},{questionGreen:"TASER NG shows customer confirmed transaction fraud",questionRed:"TASER NG shows customer confirmed transaction valid",notRequired:!1},{questionGreen:"Disputed transaction recurring (i.e., code 522 or MOTO 2) and related previous transactions also disputed",questionRed:"Disputed transaction recurring (i.e., code 522 or MOTO 2) and related previous transactions not disputed",notRequired:!1},{questionGreen:"Transaction at chip-enabled ATM/merchant terminal where TI shows fallback transaction",questionRed:"Transaction at chip-enabled ATM/merchant terminal where TI does not show fallback transaction",notRequired:!1},{questionGreen:"Transaction conducted outside of the customer's geographic area or current transacting area",questionRed:"Transactions conducted within the geographical area",notRequired:!1},{questionGreen:"Chip-enabled card only: \n• Used at a chip-enabled ATM terminal (i.e., can't be a fallback transaction) \n• Used with PIN-based transactions (e.g., 543, 515 transaction codes) ",questionRed:"Chip enabled card only: \n• Abnormal deposits fund disputed transactions \n• The following can be used to support chip-enabled card Red Flag: \n• PIN used to conduct transactions \n• ZIP Code entered at the time of purchase for authentication (AVS) \n• Contactless Chip POS 07 transactions treated as card-present, EMV-enabled transactions",notRequired:!1}],"Lost card":[{questionGreen:"Out of pattern transactions: No history of valid transactions at the same merchant location / terminal of disputed transactions OR disputed transactions not similar in frequency and dollar amounts of customers' previous valid transactions at the same merchant location / terminal",questionRed:"Two or more undisputed transactions at the same merchant location / terminal as disputed transactions for similar frequencies and dollar amounts",notRequired:!1},{questionGreen:"Invalid PIN attempts (i.e., N/A if the PIN was carried with the card)",questionRed:"No invalid PIN attempts (i.e., N/A if the PIN was carried with the card)",notRequired:!1},{questionGreen:"TASER NG shows customer confirmed transaction fraud",questionRed:"TASER NG shows customer confirmed transaction valid",notRequired:!1},{questionGreen:"Customer disputing all card-present transactions performed after the first disputed transaction",questionRed:"Customer not disputing all card-present transactions performed after the first disputed transaction",notRequired:!1},{questionGreen:"Disputed transaction recurring (i.e., code 522 or MOTO 2) and related previous transactions also disputed",questionRed:"Disputed transaction recurring (i.e., code 522 or MOTO 2) and related previous transactions not disputed",notRequired:!1},{questionGreen:"Card present transactions attempted after card closure",questionRed:null,notRequired:!1},{questionGreen:null,questionRed:"Abnormal deposits fund disputed transactions",notRequired:!1},{questionGreen:"Third-party fraud indicators present",questionRed:null,notRequired:!1},{questionGreen:null,questionRed:"FPF indicators present",notRequired:!1}],"Stolen card":[{questionGreen:"Out of pattern transactions: No history of valid transactions at the same merchant location / terminal of disputed transactions OR disputed transactions not similar in frequency and dollar amounts of customers' previous valid transactions at the same merchant location / terminal",questionRed:"Two or more undisputed transactions at the same merchant location / terminal as disputed transactions for similar frequencies and dollar amounts",notRequired:!1},{questionGreen:"Invalid PIN attempts (i.e., N/A if the PIN was carried with the card)",questionRed:"No invalid PIN attempts (i.e., N/A if the PIN was carried with the card)",notRequired:!1},{questionGreen:"TASER NG shows customer confirmed transaction fraud",questionRed:"TASER NG shows customer confirmed transaction valid",notRequired:!1},{questionGreen:"Customer disputing all card-present transactions performed after the first disputed transaction",questionRed:"Customer not disputing all card-present transactions performed after the first disputed transaction",notRequired:!1},{questionGreen:"Disputed transaction recurring (i.e., code 522 or MOTO 2) and related previous transactions also disputed",questionRed:"Disputed transaction recurring (i.e., code 522 or MOTO 2) and related previous transactions not disputed",notRequired:!1},{questionGreen:"Card present transactions attempted after card closure",questionRed:null,notRequired:!1},{questionGreen:null,questionRed:"Abnormal deposits fund disputed transactions",notRequired:!1},{questionGreen:"Third-party fraud indicators present",questionRed:null,notRequired:!1},{questionGreen:null,questionRed:"FPF indicators present",notRequired:!1}],"Lst/Stl Dgtl":[{questionGreen:"New devices recently added to the online profile",questionRed:"No new devices recently added to the online profile",notRequired:!1},{questionGreen:"Password change/demographic changes before unauthorized activity",questionRed:"No password change/demographic changes before unauthorized activity",notRequired:!1},{questionGreen:"Customer didn't allow persons access to the device that houses the Digital Wallet and suspects they conducted the transaction",questionRed:"Customer allowed persons access to the device that houses the Digital Wallet",notRequired:!1},{questionGreen:"No login to chase.com from a lost/stolen device with biometric login credentials after the device was lost/stolen",questionRed:"Successful login to chase.com from a lost/stolen device with biometric login credentials after the device was lost/stolen",notRequired:!1},{questionGreen:"Customer didn't share sign-on passwords/PINs required to make purchases or conduct activity",questionRed:"Customer shared sign-on, passwords/PINs required to make purchases or conduct activity",notRequired:!1},{questionGreen:"Customer disputing all transactions done with the token ID after the first fraudulent transaction",questionRed:"Customer not disputing all non-recurring transactions done with the token ID after the first fraudulent transaction",notRequired:!1},{questionGreen:"Invalid ZIP Code attempts \nInvalid PIN attempts found",questionRed:null,notRequired:!1},{questionGreen:"Third-party fraud indicators present",questionRed:null,notRequired:!1},{questionGreen:null,questionRed:"FPF indicators present",notRequired:!1}],"Non Receipt":[{questionGreen:"Card not activated at a terminal previously used by the customer within the last six months",questionRed:null,notRequired:!1},{questionGreen:null,questionRed:"Card sent to the mailing address on file with no PIN mailer and card activated at a terminal used by the customer within the last six months",notRequired:!1},{questionGreen:"Customer disputing all transactions performed on a card not received (Excludes 522 or MOTO 2 transactions)",questionRed:"Customer not disputing all transactions performed on a card not received (i.e., can't be code 522 or MOTO 2)",notRequired:!1},{questionGreen:"Invalid PIN attempts (i.e., N/A if the PIN was carried with the card)",questionRed:"No invalid PIN attempts (i.e., N/A if the PIN was carried with the card)",notRequired:!1},{questionGreen:"Out of pattern transactions: No history of valid transactions at the same merchant location / terminal of disputed transactions OR disputed transactions not similar in frequency and dollar amounts of customers' previous valid transactions at the same merchant location / terminal",questionRed:"Two or more undisputed transactions at the same merchant location / terminal as disputed transactions for similar frequencies and dollar amounts",notRequired:!1},{questionGreen:"Disputed transaction recurring (i.e., code 522 or MOTO 2) and related previous transactions also disputed",questionRed:"Disputed transaction recurring (i.e., code 522 or MOTO 2) and related previous transactions not disputed",notRequired:!1},{questionGreen:"Transactions attempted after card closure",questionRed:null,notRequired:!1},{questionGreen:"Third-party fraud indicators present",questionRed:null,notRequired:!1},{questionGreen:null,questionRed:"FPF indicators present",notRequired:!1}],"Unauth MOTO":[{questionGreen:"Out of pattern transactions: No history of valid transactions at the same merchant location / terminal of disputed transactions OR disputed transactions not similar in frequency and dollar amounts of customers' previous valid transactions at the same merchant location / terminal",questionRed:"Two or more undisputed transactions at the same merchant location / terminal as disputed transactions for similar frequencies and dollar amounts",notRequired:!1},{questionGreen:"Disputed transaction recurring (i.e., code 522 or MOTO 2) and related previous transactions also disputed",questionRed:"Disputed transaction recurring (i.e., code 522 or MOTO 2) and related previous transactions not disputed",notRequired:!1},{questionGreen:"Subscription merchants: Initial sign-up transaction also disputed (customer didn't authorize subscription)",questionRed:"Subscription merchants: Initial sign-up transaction valid but following charges reported as fraud (i.e., shows claim Non Fraud)",notRequired:!1},{questionGreen:"Third-party fraud indicators present",questionRed:null,notRequired:!1},{questionGreen:null,questionRed:"FPF indicators present",notRequired:!1}]}}analyze(e){const t=e.scenario;return this.isFraudScenario(t),this.getQuestionsForScenario(t)}isFraudScenario(e){return["ATO","TPI","Counterfeit","Cnft Digital","Lost card","Stolen card","Lst/Stl Dgtl","Non Receipt","Unauth MOTO"].includes(e)}getQuestionsForScenario(e){return this.isFraudScenario(e)?this.analysisQuestions[e].map(((e,t)=>({green:e.questionGreen,red:e.questionRed,notRequired:!1}))):this.analysisQuestions[e]||[]}validateAnalysisAnswers(e,t){const n=this.getQuestionsForScenario(e);let s=!0,i=[];return n.forEach(((e,n)=>{t[n]||e.notRequired||(s=!1,i.push(e.question))})),{isValid:s,unansweredQuestions:i}}}class s{constructor(){this.timer=document.getElementById("timer"),this.logClaimBtn=document.getElementById("logClaimBtn"),this.logConfirmPopup=document.getElementById("logConfirmPopup"),this.confirmLogBtn=document.getElementById("confirmLogBtn"),this.cancelLogBtn=document.getElementById("cancelLogBtn"),this.hourlyGoal=document.getElementById("hourlyGoal"),this.recentClaims=document.getElementById("recentClaims"),this.detailedLogView=document.getElementById("detailedLogView"),this.closeDetailedLogBtn=document.getElementById("closeDetailedLogBtn"),this.timerInterval=null,this.startTime=null,this.allLogsBtn=document.getElementById("allLogsBtn"),this.allElementsExist()?(this.initEventListeners(),this.initTimer(),this.renderHourlyGoal(),this.renderRecentClaims()):console.error("Some required elements are missing from the DOM"),document.getElementById("logTable").addEventListener("click",this.handleLogTableClick.bind(this))}allElementsExist(){return this.timer&&this.logClaimBtn&&this.logConfirmPopup&&this.confirmLogBtn&&this.cancelLogBtn&&this.hourlyGoal&&this.recentClaims&&this.detailedLogView&&this.closeDetailedLogBtn&&this.allLogsBtn}initEventListeners(){this.logClaimBtn.addEventListener("click",(()=>this.showLogConfirmPopup())),this.confirmLogBtn.addEventListener("click",(()=>this.logClaim())),this.cancelLogBtn.addEventListener("click",(()=>this.hideLogConfirmPopup())),this.recentClaims.addEventListener("click",(()=>this.showDetailedLogView())),this.closeDetailedLogBtn.addEventListener("click",(()=>this.hideDetailedLogView())),this.allLogsBtn.addEventListener("click",(()=>this.showDetailedLogView()))}initTimer(){this.startTime=new Date,this.timerInterval=setInterval((()=>this.updateTimer()),1e3)}updateTimer(){const e=new Date-this.startTime,t=Math.floor(e/6e4),n=Math.floor(e%6e4/1e3);this.timer.textContent=`${t.toString().padStart(2,"0")}:${n.toString().padStart(2,"0")}`}showLogConfirmPopup(){console.log("Showing log confirm popup"),clearInterval(this.timerInterval),this.logConfirmPopup.style.display="block"}hideLogConfirmPopup(){this.logConfirmPopup.style.display="none",this.initTimer()}logClaim(){const e=document.getElementById("field-accountNumber").value,t=document.getElementById("field-scenario").value,n=document.getElementById("xOutput").textContent,s=this.timer.textContent,i={date:(new Date).toLocaleString("en-HK",{timeZone:"Asia/Hong_Kong"}),claimNumber:e,scenario:t,notes:n,handleTime:s};let a=JSON.parse(localStorage.getItem("claimLogs"))||[];a.push(i),localStorage.setItem("claimLogs",JSON.stringify(a)),this.hideLogConfirmPopup(),this.renderHourlyGoal(),this.renderRecentClaims(),this.initTimer()}renderHourlyGoal(){const e=JSON.parse(localStorage.getItem("claimLogs"))||[],t=new Date,n=Array(10).fill(0);e.forEach((e=>{const s=new Date(e.date);if(s.toDateString()===t.toDateString()){const e=s.getHours()-13;e>=0&&e<10&&n[e]++}})),this.hourlyGoal.innerHTML="",n.forEach(((e,t)=>{const n=document.createElement("div");n.className="goal-bar",n.style.height=e/8*100+"%",n.style.backgroundColor=e>=8?"var(--green-base)":"var(--red-base)",n.title=`${t+13}:00 - ${e} claims`,this.hourlyGoal.appendChild(n)}))}renderRecentClaims(){const e=(JSON.parse(localStorage.getItem("claimLogs"))||[]).slice(-5).reverse();this.recentClaims.innerHTML="",e.forEach((e=>{const t=document.createElement("div");t.className="claim-item",t.textContent=`${e.claimNumber} - ${e.handleTime}`,this.recentClaims.appendChild(t)}))}showDetailedLogView(){this.detailedLogView.style.display="block",this.renderScenarioPieChart(),this.renderLogTable()}hideDetailedLogView(){this.detailedLogView.style.display="none"}renderScenarioPieChart(){const e=(JSON.parse(localStorage.getItem("claimLogs"))||[]).reduce(((e,t)=>(e[t.scenario]=(e[t.scenario]||0)+1,e)),{}),t=document.createElement("canvas");t.width=300,t.height=300,document.getElementById("scenarioPieChart").innerHTML="",document.getElementById("scenarioPieChart").appendChild(t),new Chart(t,{type:"pie",data:{labels:Object.keys(e),datasets:[{data:Object.values(e),backgroundColor:["#FF6384","#36A2EB","#FFCE56","#4BC0C0","#9966FF","#FF9F40","#FF6384","#C9CBCF","#7CFC00","#8B008B"]}]},options:{responsive:!0,maintainAspectRatio:!1}})}renderLogTable(){const e=JSON.parse(localStorage.getItem("claimLogs"))||[],t=document.querySelector("#logTable tbody");t.innerHTML="",e.forEach(((e,n)=>{t.insertRow().innerHTML=`\n                <td>${e.date}</td>\n                <td>${e.claimNumber}</td>\n                <td>${e.scenario}</td>\n                <td>${e.handleTime}</td>\n                <td>${e.notes}</td>\n                <td><button class="delete-log" data-index="${n}">Delete</button></td>\n            `}))}handleLogTableClick(e){if(e.target.classList.contains("delete-log")){const t=parseInt(e.target.getAttribute("data-index"));this.deleteLog(t)}}deleteLog(e){if(confirm("Are you sure you want to delete this log?")){let t=JSON.parse(localStorage.getItem("claimLogs"))||[];t.splice(e,1),localStorage.setItem("claimLogs",JSON.stringify(t)),this.renderLogTable(),this.renderHourlyGoal(),this.renderRecentClaims(),this.renderScenarioPieChart()}}}class i{constructor(){this.elements={xInput:document.getElementById("xInput"),xResult:document.getElementById("xResult"),overlay:document.getElementById("clickToPasteOverlay"),xAnalysis:document.getElementById("xAnalysis"),xInsight:document.getElementById("xInsight"),xD:document.getElementById("xD"),xDO:document.getElementById("xDO"),xOutput:document.getElementById("xOutput"),clearBtns:document.querySelectorAll(".clear-btn"),copyBtn:document.querySelector(".copy-btn"),logClaimBtn:document.getElementById("log-claim-btn"),allLogsBtn:document.getElementById("all-logs-btn"),logsPopup:document.getElementById("logs-popup"),closePopupBtn:document.querySelector(".close-popup"),customizeShortcutsBtn:document.getElementById("customizeShortcuts"),pasteButton:document.getElementById("pasteButton"),fillButton:document.getElementById("fillButton"),fill2Button:document.getElementById("fill2Button"),inputTitle:document.querySelector(".box .title-bar .title")},this.state={fields:{},hasCCS:!1,hasCA:!1,isRawInputVisible:!1},this.renderResultBox(),this.analyzer=new n,this.setupEventListeners(),this.setupClickToPaste(),this.setupClearButtons(),this.analyzer=new n,this.analysisAnswers={},this.currentScenario=null,this.claimLogger=new s,this.elements.analysisContainer=document.createElement("div"),this.elements.analysisContainer.className="analysis-container",this.elements.xAnalysis.parentNode.insertBefore(this.elements.analysisContainer,this.elements.xAnalysis),this.elements.selectAllContainer=document.getElementById("selectAllContainer"),this.elements.selectAll=document.getElementById("selectAll"),this.elements.selectAllActions=document.getElementById("selectAllActions"),this.elements.selectNotNeeded=document.getElementById("selectNotNeeded"),this.elements.selectMoreInfo=document.getElementById("selectMoreInfo"),this.elements.selectBack=document.getElementById("selectBack"),this.prewrittenTexts={CV:"Step 3: Decision\nClaim is Valid\nPreliminary Reasonable Investigation Completed:\nAfter thorough examination of the available evidence and indicators, we have found no sufficient basis or grounds to deny or invalidate the customer's assertion at this time. The claim appears to be consistent with our findings, and we will proceed with standard claim processing procedures.\n",CI:"Step 3: Decision\nClaim is Invalid\nComprehensive Investigation Conclusion:\nBased on extensive research and analysis, we have identified multiple significant inconsistencies that contradict the customer's assertion. These key indicators substantially undermine the validity of the claim. As a result, we have determined that the claim is invalid, and Provisional Credit (PC) is not due for this transaction.\n",MI:"Step 3: Decision\nInvestigation Status: Additional Information Required\nCurrent findings are inconclusive due to insufficient data. Key details are missing, preventing a determination on the claim's validity. Additional documentation from the customer is necessary to proceed. Provisional Credit (PC) decision is pending further information.\n\nStep 4: Claim Resolution Action\nRework financials to Pend\n\nStep 5: Next steps\nWill keep the claim pending\nLetter sent - More info",CC:"Step 5: Next steps\nClosing Claim",FI:"Step 5: Next steps (If applicable)\nClaim will be Finalized on or before FRD.",RE:"Step 4: Claim Resolution Action\nRework financials\n",AP:"Step 4: Claim Resolution Action\nApproving financial action requested\n"},this.elements.refreshOutputBtn=document.getElementById("refreshOutput"),this.elements.refreshOutputBtn.addEventListener("click",this.refreshOutput.bind(this)),this.currentStep=3,this.setupBigSteppers(),this.elements.xResult.addEventListener("input",this.updateOutput.bind(this)),this.elements.xAnalysis.addEventListener("input",this.updateOutput.bind(this)),this.elements.xD.addEventListener("input",this.updateOutput.bind(this)),this.elements.xResult.addEventListener("click",this.handleSpecialFieldClick.bind(this)),this.elements.analysisContainer.addEventListener("input",this.updateOutput.bind(this)),this.elements.buttonContainer=document.getElementById("buttonContainer"),this.elements.addButton=document.getElementById("addButton"),this.elements.gearButton=document.getElementById("gearButton"),this.elements.buttonModal=document.getElementById("buttonModal"),this.elements.errorMessage=document.getElementById("errorMessage"),this.buttons=[],this.isEditing=!1,this.currentButtonIndex=null,this.setupEventListeners()}updateOutputSection(e,t){const n=document.getElementById(e);n&&(n.innerHTML=t)}setupEventListeners(){this.elements.xInput&&this.elements.xInput.addEventListener("input",this.debounce(this.handleInput.bind(this),300)),this.elements.xD&&this.elements.xD.addEventListener("input",this.debounce(this.updateOutput.bind(this),300)),this.elements.xDO&&this.elements.xDO.addEventListener("input",this.debounce(this.updateOutput.bind(this),300)),this.elements.copyBtn.addEventListener("click",this.handleCopy.bind(this)),this.elements.copyBtn.addEventListener("click",this.showCopyFeedback.bind(this)),this.elements.fillButton.addEventListener("click",this.fill.bind(this)),this.elements.fill2Button.addEventListener("click",this.fill2.bind(this)),this.elements.xResult.addEventListener("click",this.handleResultClick.bind(this)),this.elements.logClaimBtn&&this.elements.logClaimBtn.addEventListener("click",(()=>this.claimLogger.showLogConfirmPopup()))}setupClickToPaste(){this.elements.overlay&&this.elements.overlay.addEventListener("click",(async()=>{try{const e=await navigator.clipboard.readText();this.elements.xInput&&(this.elements.xInput.value=e,this.handleInput({target:{value:e}}))}catch(e){console.error("Failed to read clipboard contents: ",e)}}))}handleInput(n){const s=n.target.value;console.log("Input text length:",s.length);const i=function(n){const s={};return Object.entries(t).forEach((([t,i])=>{const a=n.match(i);a&&(s[t]="scenario"===t?e[a[1]]||a[1]:a[1].trim())})),s.disputeCategory=function(e){return["Account Take Over","Third Party Inducement","Counterfeit","Lost","Non Receipt of card","Unauthorized MOTO"].some((t=>e.includes(t)))?"Fraud":"Non-Fraud"}(n),s.sixtyDayLiability=n.includes("Meets 60 day liability rule")?"Yes":"No",s.moreThanTwoYears=function(e){if(!e)return"Unable to determine";const t=new Date(e),n=new Date;return n.setFullYear(n.getFullYear()-2),t<n?"Yes":"No"}(s.transactionDate),s}(s);console.log("Parsed claim:",i),this.updateResultBox(i),this.currentScenario=i.scenario,this.renderAnalysisFields(this.currentScenario),this.updateAnalysis(i),this.updateOverlayText(s),this.currentScenario,this.elements.selectAllContainer.style.display="none",Object.entries(i).forEach((([e,t])=>{const n=this.state.fields[e];n&&n.container&&this.updateFieldStatus(n.container,e,t)}))}updateOverlayText(e){this.state.hasCCS=e.includes("Claim Display"),this.state.hasCA=e.includes("Checking Account Summary"),this.elements.overlay&&(this.state.hasCCS&&this.state.hasCA?(this.elements.overlay.style.display="none",this.elements.xResult&&(this.elements.xResult.style.display="block")):(this.elements.overlay.style.display="flex",this.elements.xResult&&(this.elements.xResult.style.display="none"),this.elements.overlay.textContent=this.state.hasCCS?"CCS Data Detected - Click to Paste CA":this.state.hasCA?"CA Data Detected - Click to Paste CCS":"Click to Paste CCS and CA"))}updateResultBox(e){Object.entries(e).forEach((([e,t])=>{const n=this.state.fields[e];n&&(n.value?(n.value.value=t||"",this.updateFieldStatus(n.container,e,t)):n.details&&this.updateSpecialField(n,t))}))}updateFieldStatus(e,t,n){if(console.log(`Updating field status: ${t}, value: ${n}`),!(e instanceof Element))return void console.error(`Invalid container for ${t}:`,e);e.classList.remove("green","red","warning","has-value","not-needed","more-info"),e.classList.add("field-container"),e.classList.contains("special-field")||e.classList.add("regular-field");const s=n=>{e.classList.add(n),console.log(`Set ${n} class for ${t}`)},i=e=>!e||""===e.trim();if(this.elements.xInput.value.length<50)return s("red"),void console.log(`Short input: Added red class to ${t}`);if(i(n)||e.classList.add("has-value"),e.classList.contains("special-field"))this.handleSpecialFieldStatus(e,t,n);else switch(t){case"openDate":if(i(n))s("red");else{const e=new Date;e.setFullYear(e.getFullYear()-1),s(new Date(n)>e?"warning":"green")}break;case"ytdAvgBal":if(i(n))s("red");else{const e=this.state.fields.claimAmount,t=e?parseFloat(e.value.value.replace(/[^0-9.-]+/g,"")):0;s(parseFloat(n.replace(/[^0-9.-]+/g,""))<t?"warning":"green")}break;case"disputeCategory":case"sixtyDayLiability":case"moreThanTwoYears":s(i(n)?"red":"Yes"===n?"warning":"green");break;case"nsf":i(n)?s("red"):s(parseInt(n,10)>9?"warning":"green");break;default:i(n)?s("red"):s(this.checkWarningCondition(t,n)?"warning":"green")}}handleSpecialFieldStatus(e,t,n){const s=e.querySelector(".details-input");"withdrew"===t?"No"===n?(e.classList.add("green"),e.classList.remove("red")):"6Day"===n||"Immediate"===n?(e.classList.add(""!==s.value.trim()?"green":"red"),e.classList.remove(""!==s.value.trim()?"red":"green")):(e.classList.add("red"),e.classList.remove("green")):"merchantCredit"===t&&e.classList.add("No"===n||("Partial"===n||"Full"===n)&&""!==s.value.trim()?"green":"red")}handleSpecialFieldClick(e,t){const n=this.state.fields[e];if(!n||!n.container)return;const s=n.container,i={buttonsContainer:s.querySelector(".buttons-container"),secondaryButtons:s.querySelector(".secondary-buttons"),detailsInput:s.querySelector(".details-input"),actionButton:s.querySelector(`.${t}-btn`)};s.querySelectorAll("button").forEach((e=>e.classList.remove("selected"))),i.actionButton.classList.add("selected"),"withdrew"===e||"merchantCredit"===e?"yes"===t?(i.buttonsContainer.style.display="none",i.secondaryButtons.style.display="flex",s.classList.add("red"),s.classList.remove("green")):"no"===t?(this.resetSpecialField(e),s.classList.add("green"),s.classList.remove("red")):(i.detailsInput.style.display="block",this.updateSpecialFieldStatus(s,i.detailsInput)):"yes"===t?(i.buttonsContainer.style.display="none",i.secondaryButtons.style.display="flex"):"no"===t?(this.resetSpecialField(e),s.classList.add("green")):(i.detailsInput.style.display="block",this.updateSpecialFieldStatus(s,i.detailsInput)),this.updateSpecialFieldStatus(s,i.detailsInput),this.updateOutput()}updateSpecialFieldStatus(e,t){t&&"none"!==t.style.display&&(""===t.value.trim()?(e.classList.add("red"),e.classList.remove("green")):(e.classList.add("green"),e.classList.remove("red")))}resetSpecialField(e){const t=this.state.fields[e];if(!t||!t.container)return;const n=t.container,s=n.querySelector(".buttons-container"),i=n.querySelector(".secondary-buttons"),a=n.querySelector(".details-input");n.classList.remove("green","red"),s&&(s.style.display="flex"),i&&(i.style.display="none"),a&&(a.style.display="none",a.value=""),n.querySelectorAll("button").forEach((e=>e.classList.remove("selected")))}handleResetSpecialField(e){this.resetSpecialField(e);const t=this.state.fields[e];t&&t.container&&t.container.classList.remove("green","red")}checkWarningCondition(e,t){const n=new Date;switch(e){case"customerSince":return new Date(t)>new Date(n.setFullYear(n.getFullYear()-1));case"dateOfBirth":const e=this.calculateAge(t);return e>60||e>10&&e<18;default:return!1}}calculateAge(e){const t=new Date,n=new Date(e);let s=t.getFullYear()-n.getFullYear();const i=t.getMonth()-n.getMonth();return(i<0||0===i&&t.getDate()<n.getDate())&&s--,s}handleResultClick(e){const t=e.target.closest(".field-container");if(!t)return;const n=t.dataset.field,s=e.target.classList.contains("yes-btn")?"yes":e.target.classList.contains("no-btn")?"no":e.target.classList.contains("option1-btn")?"option1":e.target.classList.contains("option2-btn")?"option2":null;s&&this.handleSpecialFieldClick(n,s)}updateTitle(e){this.elements.inputTitle&&(this.elements.inputTitle.textContent=e)}renderResultBox(){const e=[{name:"scenario",label:"Scenario"},{name:"status",label:"Claim Status"},{name:"claimAmount",label:"Claim Amount"},{name:"disputeCategory",label:"Dispute Ctgry"},{name:"sixtyDayLiability",label:"60 D Liability"},{name:"moreThanTwoYears",label:"Tx > 2 Years"},{name:"customerSince",label:"Cx Since"},{name:"dateOfBirth",label:"Date of Birth"},{name:"openDate",label:"Open Date"},{name:"ytdAvgBal",label:"YTD Avg Bal"},{name:"nsf",label:"NSF"}],t=[{name:"withdrew",label:"Withdrew"},{name:"merchantCredit",label:"Mrct Credit"},{name:"claimsFiledLess1yr",label:"Filed less than 1yr"},{name:"immediateUseOfFunds",label:"Funds Used Immediately"},{name:"pcUsedToFundOtherClaims",label:"PC Used for Other Claims"},{name:"unusualDepositPriorToReporting",label:"Unusual deposit"}];if(this.elements.xResult){this.elements.xResult.innerHTML="";const n=document.createElement("div");n.className="fields-container",this.elements.xResult.appendChild(n);const s=this.createFieldElement({name:"accountNumber",label:"Account Number"});s.classList.add("account-number-field"),n.appendChild(s);const i=document.createElement("div");i.className="regular-fields",n.appendChild(i);const a=document.createElement("div");a.className="special-fields",this.elements.xResult.appendChild(a),e.forEach((e=>{const t=this.createFieldElement(e);i.appendChild(t)})),t.forEach((e=>{let t;t="withdrew"===e.name||"merchantCredit"===e.name?this.createSpecialFieldElement(e):this.createFieldElement(e),a.appendChild(t)}))}}createFieldElement(e){const t=document.createElement("div");t.className="field-container regular-field",t.dataset.field=e.name;const n=document.createElement("span");n.className="field-label",n.textContent=`${e.label}:`;const s=document.createElement("input");s.type="checkbox",s.className="field-focus-control";const i=document.createElement("textarea");return i.className="field-value",i.id=`field-${e.name}`,i.maxLength=12,i.addEventListener("keydown",(e=>{"Enter"===e.key&&(e.preventDefault(),i.blur())})),i.addEventListener("input",(()=>{this.updateFieldStatus(t,e.name,i.value)})),i.addEventListener("blur",(()=>{s.checked=!1,console.log(`Input modification ended for ${e.name}`)})),t.appendChild(n),t.appendChild(s),t.appendChild(i),t.addEventListener("click",(e=>{e.target!==i&&(s.checked=!0,i.focus())})),this.state.fields[e.name]={container:t,value:i},t}setupClearButtons(){this.elements.clearBtns.forEach((e=>{e.addEventListener("click",this.handleClearButtonClick.bind(this))}))}handleClearButtonClick(e){const t=e.target.closest(".input-group").querySelector("textarea");t&&(t.value="",this.updateOutput())}createSpecialFieldElement(e){const t=document.createElement("div");t.className="field-container special-field",t.dataset.field=e.name;const n=document.createElement("div");n.className="label-container";const s=document.createElement("span");s.className="field-label",s.textContent=`${e.label}:`;const i=document.createElement("button");i.className="reset-btn",i.textContent="Reset",i.addEventListener("click",(()=>this.handleResetSpecialField(e.name))),n.appendChild(s),n.appendChild(i);const a=document.createElement("div");a.className="buttons-container";const o=document.createElement("div");o.className="secondary-buttons",[{class:"yes-btn",text:"Yes",container:a},{class:"no-btn",text:"No",container:a},{class:"option1-btn",text:"withdrew"===e.name?"6Day":"Partial",container:o},{class:"option2-btn",text:"withdrew"===e.name?"Immediate":"Full",container:o}].forEach((e=>{const t=document.createElement("button");t.className=e.class,t.textContent=e.text,e.container.appendChild(t)}));const r=document.createElement("input");return r.type="text",r.className="details-input",r.placeholder="Enter details...",r.addEventListener("input",(()=>this.handleSpecialFieldInput(e.name))),t.appendChild(n),t.appendChild(a),t.appendChild(o),t.appendChild(r),this.state.fields[e.name]={container:t,detailsInput:r},t}handleSpecialFieldInput(e){const t=this.state.fields[e];if(!t||!t.container)return;const n=t.container,s=n.querySelector(".details-input");this.updateSpecialFieldStatus(n,s)}fill(){this.appendToInput("\t Queues \t Claim \t Financials \t Approvals \t Reconstruction \t Enhanced Claim Search \t Retail Digital Intake \n\tClaim Search\tClick to Minimize\t\n\nClaim Number\n123456789123456\nSearch Results, Total Claims Found: 1\n123456789123456\nD\n09/09/2024 11:03 AM\nClosed\n$119.95\n\nBirth Date:\t02/16/2005 \tSegment:\t \nSSN/TIN:\tXX  Copy \tCustomer Since:\t06/11/2024 \n \t \tStatus:\t03 \n\tClaim Display  Segment: No Special Segment, LOB Tier1: National Ret\nReference Number: 123456789123456\t\nRefresh\tShow Available Actions\tEdit\nCustomer Name:\tD\tClaim Amount:\t$119.95\nSSN:\tXX  Copy\tStatus Code:\tClosed (08)\nTransactions:\nDate\tCode\tScenario\tDescription\tAmount\tAccount\n07/09/2024\t0543 Show Additional Information\tMerchandise not received\tE 7 07/09\t$119.95\tXXXXX2581  Copy Total Checking\nXXXXXXXXXXXX3302  Copy ATM/Debit Card")}fill2(){this.appendToInput("\n\nChecking Account Summary\n\n$0.00\nAverage Balance YTD\n\n$1,188.00\t\nAccrued \n\nNo Assigned Overdraft Officer\nTotal # Occurrences MTD\n\n1\t\nTotal # OD/NSF Occurrences Past 12 Months\n\n61 (days debits presented against NSF funds)\n\nAccount\n\nMiscellaneous\n\nOpen Date\n\n04/10/2023\t\nClose Date\n\n\nNo\nHelpLE")}renderAnalysisFields(e){this.elements.analysisContainer.innerHTML="";const t=this.analyzer.getQuestionsForScenario(e),n=this.analyzer.isFraudScenario(e);this.elements.analysisContainer.style.gridTemplateColumns=n?"1fr":"1fr 1fr",t.forEach(((e,t)=>{const s=this.createFieldContainer(e,t,n);this.elements.analysisContainer.appendChild(s)})),this.updateAnalysisOutput()}createFieldContainer(e,t,n){const s=document.createElement("div");s.className="analysis-field-container",s.dataset.questionIndex=t;const i=document.createElement("span");if(i.className="question-text",i.textContent=e.question,n){const n=this.createFraudFlagContainer("green",e.green),a=this.createFraudFlagContainer("red",e.red),o=document.createElement("textarea");o.rows=3,o.cols=30,o.className="fraud-input",o.style.resize="none",o.style.display="none",o.addEventListener("input",(()=>this.updateAnalysisOutput())),s.appendChild(i),s.appendChild(n),s.appendChild(a),s.appendChild(o),s.classList.add("f","placeholder"),n.style.display="block",a.style.display="none",s.addEventListener("click",(e=>{e.target!==o&&this.handleFraudFieldClick(e,t)})),s.addEventListener("contextmenu",(e=>{e.target!==o&&(this.handleFraudFieldRightClick(e,t),e.preventDefault())}))}else{const e=document.createElement("input");e.type="text",e.className="answer-input",e.value=this.analysisAnswers[t]?.answer||"",e.addEventListener("input",(e=>this.handleAnswerInput(e,t))),s.appendChild(i),s.appendChild(e),s.addEventListener("click",(e=>this.handleNonFraudFieldClick(e,t))),s.addEventListener("contextmenu",(e=>this.handleNonFraudFieldRightClick(e,t)))}return s.addEventListener("dblclick",(e=>this.handleFieldDoubleClick(e,t))),s}createFraudFlagContainer(e,t){const n=document.createElement("div");n.className=`fraud-flag-container f ${e}`,n.style.display="none";const s=document.createElement("span");return s.textContent=t,n.appendChild(s),n}handleNonFraudFieldClick(e,t){e.preventDefault();const n=e.currentTarget;n.classList.contains("more-info")&&this.resetMoreInfoState(n,t)}handleNonFraudFieldRightClick(e,t){e.preventDefault();const n=e.currentTarget;n.classList.contains("more-info")?this.resetMoreInfoState(n,t):(n.classList.add("more-info"),n.querySelector(".answer-input").style.display="none",this.analysisAnswers[t]={answer:"",state:"moreInfo"},this.updateAnalysisFieldStatus(n,t),this.updateAnalysisOutput())}resetMoreInfoState(e,t){e.classList.remove("more-info");const n=e.querySelector(".answer-input");n.style.display="block",n.value="",this.analysisAnswers[t]={answer:"",state:"unanswered"},this.updateAnalysisFieldStatus(e,t),this.updateAnalysisOutput()}createFraudFieldContainer(e,t){const n=document.createElement("div");n.className=`fraud-field-container f ${e}`,n.style.display="none";const s=document.createElement("span");s.textContent=t;const i=document.createElement("input");return i.type="text",i.className="fraud-input",n.appendChild(s),n.appendChild(i),n}handleFraudFieldClick(e,t){e.preventDefault();const n=e.currentTarget;if(n.classList.contains("not-needed"))return;const s=n.querySelector(".f.green"),i=n.querySelector(".f.red"),a=n.querySelector(".fraud-input");n.classList.remove("placeholder","f","red"),n.classList.add("f","green"),s.style.display="block",i.style.display="none",a.style.display="block",this.analysisAnswers[t]={answer:"GREEN",state:"answered"},this.updateAnalysisFieldStatus(n,t),this.updateAnalysisOutput()}handleFraudFieldRightClick(e,t){e.preventDefault();const n=e.currentTarget;if(n.classList.contains("not-needed"))return;const s=n.querySelector(".f.green"),i=n.querySelector(".f.red"),a=n.querySelector(".fraud-input");n.classList.remove("placeholder","f","green"),n.classList.add("f","red"),s.style.display="none",i.style.display="block",a.style.display="block",this.analysisAnswers[t]={answer:"RED",state:"answered"},this.updateAnalysisFieldStatus(n,t),this.updateAnalysisOutput()}handleAnswerInput(e,t){const n=e.target.value;this.analysisAnswers[t]={...this.analysisAnswers[t],answer:n,state:n?"answered":"unanswered"},this.updateAnalysisFieldStatus(e.target.closest(".analysis-field-container"),t),this.updateAnalysisOutput()}handleFieldClick(e,t){const n=e.currentTarget,s=n.querySelector(".answer-input");n.classList.contains("not-needed")||n.classList.contains("more-info")||s.focus()}updateAnalysisFieldStatus(e,t){if(!e)return;e.classList.remove("has-value","not-needed","f","red","green","placeholder","more-info");const n=this.analysisAnswers[t];n&&(this.analyzer.isFraudScenario(this.currentScenario)?"answered"===n.state?e.classList.add("f",n.answer.toLowerCase()):"unanswered"===n.state&&e.classList.add("f","placeholder"):"answered"===n.state?e.classList.add("has-value"):"notNeeded"===n.state?e.classList.add("not-needed"):"moreInfo"===n.state&&e.classList.add("more-info"))}handleFieldDoubleClick(e,t){e.preventDefault();const n=e.currentTarget;this.analyzer.isFraudScenario(this.currentScenario)?n.classList.contains("placeholder")?(n.classList.remove("f","placeholder","green","red"),n.querySelector(".f.green").style.display="none",n.querySelector(".f.red").style.display="none",n.querySelector(".fraud-input").style.display="none",this.analysisAnswers[t]={answer:"NOT_REQUIRED",state:"inactive"}):(n.classList.add("f","placeholder"),n.classList.remove("green","red"),n.querySelector(".f.green").style.display="block",n.querySelector(".f.red").style.display="none",n.querySelector(".fraud-input").style.display="none",this.analysisAnswers[t]={answer:"",state:"unanswered"}):n.classList.contains("not-needed")?(n.classList.remove("not-needed"),n.querySelector(".answer-input").style.display="block",this.analysisAnswers[t]={answer:"",state:"unanswered"}):(n.classList.add("not-needed"),n.querySelector(".answer-input").style.display="none",this.analysisAnswers[t]={answer:"NOT_REQUIRED",state:"notNeeded"}),this.updateAnalysisFieldStatus(n,t),this.updateAnalysisOutput()}handleFieldRightClick(e,t){e.preventDefault(),this.toggleMoreInfo(t)}toggleNeeded(e){const t=this.getFieldContainer(e);if(!t)return;const n=t.querySelector(".answer-input"),s=t.classList.toggle("not-needed");t.classList.remove("more-info","has-value"),s?(n&&(n.style.display="none",n.value=""),this.analysisAnswers[e]={...this.analysisAnswers[e],state:"notNeeded",answer:"",moreInfo:!1}):(n&&(n.style.display="inline-block"),this.analysisAnswers[e]={...this.analysisAnswers[e],state:"unanswered",moreInfo:!1}),this.updateAnalysisOutput()}toggleMoreInfo(e){const t=this.getFieldContainer(e);if(!t)return;const n=t.querySelector(".answer-input"),s=t.classList.toggle("more-info");t.classList.remove("not-needed","has-value"),s?(n&&(n.style.display="none"),this.analysisAnswers[e]={...this.analysisAnswers[e],state:"moreInfo",moreInfo:!0}):(n&&(n.style.display="inline-block",n.value&&t.classList.add("has-value")),this.analysisAnswers[e]={...this.analysisAnswers[e],state:n.value?"answered":"unanswered",moreInfo:!1}),this.updateAnalysisOutput()}createOptionButton(e,t){const n=document.createElement("button");return n.textContent=e,n.addEventListener("click",t),n}toggleMoreInfo(e){const t=this.getFieldContainer(e);if(!t)return;const n=t.querySelector(".answer-input"),s=t.querySelector(".toggle-button"),i=t.classList.toggle("more-info");t.classList.remove("not-needed"),s&&(s.textContent="Not Needed"),i?(n&&(n.style.display="none"),this.analysisAnswers[e]={...this.analysisAnswers[e],state:"moreInfo",moreInfo:!0}):(n&&(n.style.display="inline-block"),this.analysisAnswers[e]={...this.analysisAnswers[e],state:"answered",moreInfo:!1}),this.updateAnalysisOutput()}showSelectAllOptions(){const e=this.analyzer.isFraudScenario(this.currentScenario);this.elements.selectAll.style.display="none",this.elements.selectAllActions.style.display="block",e?(this.elements.selectNotNeeded.textContent="Not needed",this.elements.selectMoreInfo.textContent="Red",this.elements.selectGreenFlags||(this.elements.selectGreenFlags=document.createElement("button"),this.elements.selectGreenFlags.textContent="Green",this.elements.selectGreenFlags.addEventListener("click",(()=>this.selectAllAction("greenFlags"))),this.elements.selectAllActions.appendChild(this.elements.selectGreenFlags)),this.elements.selectGreenFlags.style.display="inline-block"):(this.elements.selectNotNeeded.textContent="Not Needed",this.elements.selectMoreInfo.textContent="More Info",this.elements.selectGreenFlags&&(this.elements.selectGreenFlags.style.display="none"))}hideSelectAllOptions(){this.elements.selectAllActions.style.display="none",this.elements.selectAll.style.display="block"}selectAllAction(e){const t=this.elements.analysisContainer.querySelectorAll(".analysis-field-container"),n=this.analyzer.isFraudScenario(this.currentScenario);t.forEach(((t,s)=>{n?"notNeeded"===e?this.toggleFraudFieldInactive(t,s):"moreInfo"===e?this.setFraudFieldRed(t,s):"greenFlags"===e&&this.setFraudFieldGreen(t,s):"notNeeded"===e?this.toggleNonFraudFieldNotNeeded(t,s):"moreInfo"===e&&this.setNonFraudFieldMoreInfo(t,s)})),this.hideSelectAllOptions(),this.updateAnalysisOutput()}setFraudFieldRed(e,t){const n=e.querySelector(".f.green"),s=e.querySelector(".f.red"),i=e.querySelector(".fraud-input");e.classList.remove("placeholder","f","green"),e.classList.add("f","red"),n.style.display="none",s.style.display="block",i.style.display="block",this.analysisAnswers[t]={answer:"RED",state:"answered"},this.updateAnalysisFieldStatus(e,t)}toggleNonFraudFieldNotNeeded(e,t){e.classList.contains("not-needed")?(e.classList.remove("not-needed"),e.querySelector(".answer-input").style.display="block",this.analysisAnswers[t]={answer:"",state:"unanswered"}):(e.classList.add("not-needed"),e.querySelector(".answer-input").style.display="none",this.analysisAnswers[t]={answer:"NOT_REQUIRED",state:"notNeeded"}),this.updateAnalysisFieldStatus(e,t)}setNonFraudFieldMoreInfo(e,t){e.classList.add("more-info"),e.querySelector(".answer-input").style.display="none",this.analysisAnswers[t]={answer:"",state:"moreInfo"},this.updateAnalysisFieldStatus(e,t)}setFraudFieldGreen(e,t){const n=e.querySelector(".f.green"),s=e.querySelector(".f.red"),i=e.querySelector(".fraud-input");e.classList.remove("placeholder","f","red"),e.classList.add("f","green"),n.style.display="block",s.style.display="none",i.style.display="block",this.analysisAnswers[t]={answer:"GREEN",state:"answered"},this.updateAnalysisFieldStatus(e,t)}toggleFraudFieldInactive(e,t){e.classList.contains("placeholder")?(e.classList.remove("f","placeholder","green","red"),e.querySelector(".f.green").style.display="none",e.querySelector(".f.red").style.display="none",e.querySelector(".fraud-input").style.display="none",this.analysisAnswers[t]={answer:"NOT_REQUIRED",state:"inactive"}):(e.classList.add("f","placeholder"),e.classList.remove("green","red"),e.querySelector(".f.green").style.display="block",e.querySelector(".f.red").style.display="none",e.querySelector(".fraud-input").style.display="none",this.analysisAnswers[t]={answer:"",state:"unanswered"}),this.updateAnalysisFieldStatus(e,t)}toggleMoreInfo(e){const t=this.getFieldContainer(e);if(!t)return;const n=t.querySelector(".answer-input"),s=t.querySelector(".toggle-button"),i=t.classList.toggle("more-info");t.classList.remove("not-needed"),s&&(s.textContent="Not Needed"),i?(n&&(n.style.display="none"),this.analysisAnswers[e]={...this.analysisAnswers[e],state:"moreInfo",moreInfo:!0}):(n&&(n.style.display="inline-block"),this.analysisAnswers[e]={...this.analysisAnswers[e],state:"answered",moreInfo:!1}),this.updateAnalysisOutput()}getFieldContainer(e){return this.elements.analysisContainer.querySelector(`[data-question-index="${e}"]`)}updateAnalysisOutput(){let e="",t=[],n=[],s=[];const i=this.analyzer.isFraudScenario(this.currentScenario),a=this.analyzer.getQuestionsForScenario(this.currentScenario);Object.entries(this.analysisAnswers).forEach((([o,r])=>{const l=a[o];if("notNeeded"!==r.state&&"inactive"!==r.state)if(i){if("answered"===r.state){const e=this.elements.analysisContainer.querySelector(`[data-question-index="${o}"]`).querySelector(".fraud-input"),s="GREEN"===r.answer?l.green:l.red,i=e.value?` (${e.value})`:"";"GREEN"===r.answer?t.push(s+i):"RED"===r.answer&&n.push(s+i)}}else"answered"===r.state?e+=`${l.question}: ${r.answer||""}\n`:"moreInfo"===r.state&&s.push(l.question)})),i&&(t.length>0&&(e+="Green Flags:\n",t.forEach((t=>e+=`- ${t}\n`)),e+="\n"),n.length>0&&(e+="Red Flags:\n",n.forEach((t=>e+=`- ${t}\n`)),e+="")),s.length>0&&(e+="More info needed, please ask the customer the following questions to proceed with their claim:\n\n",s.forEach((t=>e+=`- ${t}\n`))),this.elements.xAnalysis?this.elements.xAnalysis.value=e:console.warn("xAnalysis element not found")}setupBigSteppers(){document.getElementById("bigsteppers").addEventListener("click",this.handleBigStepperClick.bind(this)),document.getElementById("resetButton").addEventListener("click",this.resetToStep3.bind(this)),this.showButtonsForStep(3)}handleBigStepperClick(e){const t=e.target.closest(".button");if(!t)return;const n=t.getAttribute("data-action");3===this.currentStep&&(this.elements.xD.textContent=""),this.insertText(n),"MI"!==n&&(this.currentStep++,this.currentStep<=5&&this.showButtonsForStep(this.currentStep))}showButtonsForStep(e){document.querySelectorAll("#bigsteppers .button").forEach((t=>{const n=t.querySelector(".step-indicator");n&&n.textContent.includes(`Step ${e}`)?t.style.display="inline-block":t.style.display="none"})),document.getElementById("resetButton").style.display=4===e||5===e?"inline-block":"none"}insertText(e){const t=this.prewrittenTexts[e];t&&(["CC","FI","RE","AP"].includes(e)?this.replaceOrAddStep(this.elements.xD,["CC","FI"].includes(e)?5:4,t):this.elements.xD.textContent=t,this.updateOutput())}replaceOrAddStep(e,t,n){const s=e.textContent.split("\n");s.some(((e,i)=>!!e.startsWith(`Step ${t}:`)&&(s.splice(i,2,n),!0)))||s.push(n),e.textContent=s.join("\n")}resetToStep3(){this.currentStep=3,this.showButtonsForStep(3),this.elements.xD.textContent="",this.updateOutput()}updateAnalysis(e){if(!this.analyzer)return void console.warn("Analyzer not initialized");const t=this.analyzer.analyze(e);this.elements.xAnalysis?this.elements.xAnalysis.value=t:console.warn("xAnalysis element not found")}refreshOutput(){this.updateOutput()}updateOutput(){let e="",t="";if(Object.entries({scenario:"Claim Scenario",status:"Pre Review Claim Status",duplicate:"Duplicate",merchantCredit:"MC (Partial/Full)",withdrew:"Withdrew",matchingAdjustment:"Matching Adjustment"}).forEach((([t,n])=>{const s=this.state.fields[t];let i="";if("merchantCredit"===t||"withdrew"===t){const e=s.container.querySelector(".selected");if(e){if(i=e.textContent,"No"!==i){const e=s.detailsInput?.value||"";i+=e?": "+e:""}}else i="No"}else s&&s.value&&(i=s.value.value||"");e+=`${n}:${i}<br>`})),Object.entries({claimAmount:"Claim Amount",disputeCategory:"Dispute Category",sixtyDayLiability:"60 Day Liability",moreThanTwoYears:"Tran more than 2yrs",elderlyAbuse:"Elderly Abuse"}).forEach((([e,n])=>{const s=this.state.fields[e],i=s&&s.value?s.value.value:"";t+=`${n}: ${i}<br>`})),t+="<h3>FPF Indicators:</h3>",Object.entries({customerSince:"Customer since",openDate:"Open date",ytdAvgBal:"YTD Avg Bal",nsf:"NSF",dateOfBirth:"DOB",claimsFiledLess1yr:"Claims filed less 1yr",immediateUseOfFunds:"Immediate use of funds",pcUsedToFundOtherClaims:"PC Used to fund other claims",unusualDepositPriorToReporting:"Unusual deposit prior to reporting"}).forEach((([e,n])=>{const s=this.state.fields[e],i=s&&s.value?s.value.value:"";t+=`${n}: ${i}<br>`})),t+="<h3>Insights/Analysis (Red/Green):</h3>",this.elements.xAnalysis&&(t+=this.elements.xAnalysis.value.replace(/\n/g,"<br>")),this.updateOutputSection("step1Content",e),this.updateOutputSection("step2Content",t),this.elements.xD){const e=this.elements.xD.value.split(/Step \d+:/);if(e.length>1){let t=e[1].trim();t=t.replace(/^Decision\s+/,""),t=t.replace(/\n/g,"<br>"),this.updateOutputSection("step3Content",t)}if(e.length>2){let t=e[2].trim();t=t.replace(/^Claim Resolution Action\s+/,""),t=t.replace(/\n/g,"<br>"),this.updateOutputSection("step4Content",t)}if(e.length>3){let t=e[3].trim();t=t.replace(/^Next steps \(If applicable\)\s+/,""),t=t.replace(/\n/g,"<br>"),this.updateOutputSection("step5Content",t)}}}handleClear(e){const t=e.target.closest(".box"),n=t.querySelector("textarea"),s=t.querySelector("[contenteditable]");n&&(n.value=""),s&&(s.textContent=""),this.updateOutput(),this.resetLayout()}handleCopy(){const e=this.elements.xOutput.innerText||this.elements.xOutput.textContent,t=document.createElement("textarea");t.value=e,document.body.appendChild(t),t.select(),document.execCommand("copy"),document.body.removeChild(t),this.showCopyFeedback("Copied to clipboard!")}showCopyFeedback(e){const t=document.createElement("div");t.textContent="Copied to clipboard!",t.style.position="fixed",t.style.top="-80px",t.style.left="80%",t.style.transform="translateX(-100%)",t.style.padding="10px 20px",t.style.backgroundColor="#2ecc71",t.style.color="white",t.style.borderRadius="15px",t.style.fontFamily="Arial, sans-serif",t.style.fontSize="14px",t.style.fontWeight="bold",t.style.boxShadow="0 4px 6px rgba(0,0,0,0.1)",t.style.transition="all 0.5s cubic-bezier(0.68, -0.555, 0.265, 1.55)",t.style.zIndex="1000",document.body.appendChild(t),t.offsetHeight,t.style.top="40px",setTimeout((()=>{t.style.top="-100px",setTimeout((()=>document.body.removeChild(t)),500)}),2e3)}debounce(e,t){let n;return function(...s){clearTimeout(n),n=setTimeout((()=>e.apply(this,s)),t)}}appendToInput(e){const t=e+this.elements.xInput.value;this.elements.xInput.value=t,this.handleInput({target:{value:t}}),this.updateTitle("Result"),this.elements.xInput.scrollTop=0}}const a={dark:{primary:"linear-gradient(rgba(255, 255, 255, 0.034), rgba(49, 49, 49, 0.425)), linear-gradient(to top, #000000, #0e0e0e, #111)",secondary:"#222222",accent:"#00000",bg:"rgba(0, 0, 0, 0.911)",text:"#dbd7bc",greenField:"rgba(53, 255, 53, 0.1)"},light:{primary:"linear-gradient(to bottom, #FFF9EB, #FFF1E6)",secondary:"#F5F0E7",accent:"#D98695",bg:"linear-gradient(to bottom, #FFFBEB, #FFF5E1)",text:"#333333",greenField:"rgba(0, 200, 0, 0.1)"}};new class{constructor(){this.state={currentScheme:"dark"},this.init()}init(){document.getElementById("colorSchemeToggle").addEventListener("click",(()=>this.cycleColorScheme())),this.updateColors()}cycleColorScheme(){const e=Object.keys(a),t=(e.indexOf(this.state.currentScheme)+1)%e.length;this.state.currentScheme=e[t],this.updateColors(),this.updateToggleButton()}updateColors(){const e=document.documentElement,t=a[this.state.currentScheme];e.classList.remove("light-mode"),"light"===this.state.currentScheme&&e.classList.add("light-mode");for(const[n,s]of Object.entries(t))e.style.setProperty(`--${n}`,s)}updateToggleButton(){document.getElementById("colorSchemeToggle").textContent={dark:"🌙",light:"☀️"}[this.state.currentScheme]}initClaimLogger(){document.addEventListener("DOMContentLoaded",(()=>{new s}))}},document.addEventListener("DOMContentLoaded",(()=>{window.claimTool=new i}))})();